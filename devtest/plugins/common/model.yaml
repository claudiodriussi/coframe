---
# The system recognize all the types defined in SQLAlchemy, but from them you
# can define your own types with specific characteristics even only for semantic
# reasons. You can define single fields or groups of fields that are often used
# together as mixins. The attributes defined can be overloaded in the tables.
types:

  ID:
    inherits: Integer
    primary_key: True
    autoincrement: True
    title: "Unique Identifier"
    help: |
      The primary key for the table

  ShortID:
    inherits: String
    length: 32
    primary_key: True
    title: "Unique Identifier"
    help: |
      The primary key for the table

  ShortStr:
    inherits: String
    length: 32

  SKU:
    inherits: ShortStr
    nullable: False

  Description:
    inherits: String
    nullable: False

  Name:
    inherits: Description
    index: True

  Password:
    inherits: String
    nullable: False
    title: "Password"
    help: |
      Please insert a robust password and keep it safe

  Email:
    inherits: String
    validate: email_validator

  Price:
    inherits: Numeric
    length: 10
    decimals: 4

  Json:
    inherits: JSON
    default: {}
    nullable: True

  Markdown:
    inherits: Text

  TimeStamp:
    title: "Timestamp"
    columns:
      - name: created_at
        type: DateTime
        default: now
        nullable: False
      - name: updated_at
        type: DateTime
        default: now
        nullable: False

  Address:
    title: "Address"
    columns:
      - name: address
        type: String
        nullable: False
      - name: city
        type: String
      - name: state
        type: String
      - name: zip
        type: String
      - name: country
        type: String

tables:

  Config:
    name: configs
    title: "Configuration"
    help: |
      Wide app configuration file
    tags: [short]

    columns:
      - name: id
        type: ShortID

      - name: description
        type: Description

      - name: group
        type: ShortStr

      - name: help
        type: Markdown

      - name: value
        type: String

      - name: values
        type: Json
